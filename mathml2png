#!/usr/bin/env python3

import sys
import argparse
import shutil
import subprocess
import tempfile
import psutil
import se


def main() -> int:
	parser = argparse.ArgumentParser(description="Convert a fragment of MathML into a transparent PNG. Output is saved to the specified filename.")
	parser.add_argument("-o", "--output-filename", dest="output_filename", metavar="FILENAME", required=True, type=str, help="the filename to save PNG output to")
	parser.add_argument("mathml_fragment", metavar="FRAGMENT", help="a fragment of MathML; for example: <math><mn>2</mn></math>")
	args = parser.parse_args()

	# Check for required utilities
	firefox_path = shutil.which("firefox")
	convert_path = shutil.which("convert")

	if firefox_path is None:
		se.print_error("Couldn’t locate firefox. Is it installed?")
		return se.MissingDependencyException.code

	if convert_path is None:
		se.print_error("Couldn’t locate imagemagick. Is it installed?")
		return se.MissingDependencyException.code

	if "firefox" in (p.name() for p in psutil.process_iter()):
		se.print_error("firefox is required to process MathML, but firefox is currently running. Close all instances of firefox and try again.")
		return se.FirefoxRunningException.code

	with tempfile.NamedTemporaryFile(mode="w+") as mathml_temp_file:
		with tempfile.NamedTemporaryFile(mode="w+", suffix=".png") as png_temp_file:
			mathml_temp_file.write("<!doctype html><html><head><meta charset=\"utf-8\"><title>MathML fragment</title></head><body>{}</body></html>".format(args.mathml_fragment))
			mathml_temp_file.seek(0)

			subprocess.call([firefox_path, "-screenshot", png_temp_file.name, "file://{}".format(mathml_temp_file.name)], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

			subprocess.call([convert_path, png_temp_file.name, "-fuzz", "10%", "-transparent", "white", "-trim", args.output_filename])

	return 0

if __name__ == "__main__":
	sys.exit(main())
